# Makefile.in generated by automake 1.14 from Makefile.am.
# test/autoScripts/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/poet
pkgincludedir = $(includedir)/poet
pkglibdir = $(libdir)/poet
pkglibexecdir = $(libexecdir)/poet
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
DIST_COMMON = $(srcdir)/../../Make.inc $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am
subdir = test/autoScripts
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = aclocal-1.14
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = autoconf
AUTOHEADER = autoheader
AUTOMAKE = automake-1.14
AWK = awk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"POET\" -DPACKAGE_TARNAME=\"poet\" -DPACKAGE_VERSION=\"1.07.03\" -DPACKAGE_STRING=\"POET\ 1.07.03\" -DPACKAGE_BUGREPORT=\"qyi@uccs.edu\" -DPACKAGE_URL=\"\" -DYYTEXT_POINTER=1 -DPACKAGE=\"poet\" -DVERSION=\"1.07.03\"
DEPDIR = .deps
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EXEEXT = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LEX = flex
LEXLIB = -ll
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = makeinfo
MKDIR_P = ../.././install-sh -c -d
OBJEXT = o
PACKAGE = poet
PACKAGE_BUGREPORT = qyi@uccs.edu
PACKAGE_NAME = POET
PACKAGE_STRING = POET 1.07.03
PACKAGE_TARNAME = poet
PACKAGE_URL = 
PACKAGE_VERSION = 1.07.03
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 1.07.03
YACC = bison -y
YFLAGS = 
abs_builddir = /Users/qyi/POET/trunk/test/autoScripts
abs_srcdir = /Users/qyi/POET/trunk/test/autoScripts
abs_top_builddir = /Users/qyi/POET/trunk
abs_top_srcdir = /Users/qyi/POET/trunk
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
atlas_exe = xdmmtst
atlas_inc = 
atlas_obj = 
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/qyi/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
rose_srcdir = 
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
testdirs = commands gemmATLAS gemvATLAS gerATLAS autoScripts timerGeneration parseF parseC parsePy tune
tooldirs = highlevel_interface test_files auto_tuning matrixOpt stencil-codegen
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
POET_LIB = $(top_srcdir)/lib
loopProc = $(top_srcdir)/../SLICE/loopOptimization/testROSE/LoopProcessor
input = 
config1 = 
config2 = 
config3 = 
comp = diff
MS = 500
NS = 500
KS = 500
scripts = chfac.pt trmm.pt dgemm.pt dgemm1.pt dgemm2.pt dgetrf.pt dgemvT.pt dger.pt
EXTRA_DIST = $(scripts) chfac.h trmm.h rose_chfac.C rose_trmm.C rose_dgemm.C rose_dgemvT.C rose_dger.C rose_dgetrf.C dgemm.c_save dgemm1.c_save dgemm2.c_save dgemm_1.c_save dgemm_2.c_save dgemm_3.c_save dgetrf.c_save dgetrf_1.c_save dgetrf_2.c_save dgemvT.c_save dger.c_save trmm_tester.c chfac_tester.c trmm_timer.c chfac_timer.c chfac.c_save trmm.c_save dgemm_tester.c dgemm_timer.c
NREP = 1
bk = 32
cp1 = 2
cp2 = 2
cp3 = 2
uj1 = 4
uj2 = 1
scalar1 = 1
scalar2 = 1
scalar3 = 2
ur2 = 16
bk_sel = 1 8 16 24 32 40 48 56 64 72 80 88 96
ur_sel = 1 8 16 24 32 40 48 56 64 72 80 88 96
scalar3_sel = 1 2
scalar2_sel = 1 2
scalar1_sel = 1 2
cp3_sel = 1 2
cp2_sel = 1 2
cp1_sel = 1 2
uj2_sel = 1 2 3 4 5 6 7 8 9 10 11 12
uj1_sel = 1 2 3 4 5 6 7 8 9 10 11 12
from = 
to = 
file = 
dir = to
op = diff
LOCAL_DIFFROSE = if test -n "$(rose_srcdir)"; then \
            for f in $(DIST_SOURCES) $(EXTRA_DIST); do \
                 ff=$${f/__ROSE/}; \
                 if [[ $$ff == "*__*" ]]; then continue; else \
                     if [[ $(dir) == to ]]; then  \
                       command="$(op) $(src_srcdir)/$$f $(rosedir)/$$ff"; \
                     else \
                       command="$(op) $(rosedir)/$$ff $(srcdir)/$$f"; \
                     fi; \
                     if test -e $(rosedir)/$$ff; then \
                          echo "$$command"; $$command || true; \
                     else echo "new file $(srcdir)/$$f "; \
                     fi; \
                 fi; \
            done; \
          fi

all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/../../Make.inc $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu test/autoScripts/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu test/autoScripts/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/../../Make.inc:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
tags TAGS:

ctags CTAGS:

cscope cscopelist:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: all all-am check check-am clean clean-generic cscopelist-am \
	ctags-am distclean distclean-generic distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic pdf \
	pdf-am ps ps-am tags-am uninstall uninstall-am


all: 

single1:
	$(top_builddir)/src/pcg $(debug) -L$(srcdir) $(config1) $(srcdir)/$(input)$(config2).pt > out.c

#	if [ "$(config2)" != "" ]; then cp $(srcdir)/rose_$(input)$(config2).C rose_$(input).C; fi;

slice: 
	$(loopProc) $(config1) $(srcdir)/rose_$(input)$(config2).C
	mv rose_rose_$(input)$(config2).C out.c

single:
	make single1
	$(comp) out.c $(srcdir)/$(input)$(config3).c_save

check : 
	make single input=dgemm
	make single input=dgetrf config1="" config3="_1"
	make single input=dgetrf config1="-pbsize_nest1=\"16 1\"" 
	make single input=dgetrf config1="-pbsize_nest1=\"16 1\" -pujsize_nest1=1" config3="_2"
	make single input=chfac
	make single input=trmm
	make single input=dgemm config1="-ppthread_nest1=2" config3="_1"
	make single input=dgemm config2="1" config3="1"
	make single input=dgemm config2="2" config3="2"
	make single input=dgemm config1="-ppsize_nest1=144 -ppthread_nest1=2 -pcopy1_config_C=2 -pbsize_nest1=\"72 72 72\" -pujsize_nest1=\"12 1\" -pusize_nest2=36" config3="_2"
	make single input=dgemm config1="-ppsize_nest1=144 -ppthread_nest1=2 -pcopy1_config_C=2 -pbsize_nest1=\"72 72 72\" -pujsize_nest1=\"12 1\" -pusize_nest2=72" config3="_3"
	make single input=dgemvT config1="-ppthread_nest1=2 -pbsize_nest1=\"16 16\" -pujsize_nest1=2 -pcopy1_config_Y=2 -pcopy2_config_X=0"
	make single config1="-ppthread_nest1=2" input=dger 
	rm out.c

test_chfac:
	gcc chfac_tester.c out.c
	./a.out

time_chfac:
	gcc chfac_timer.c out.c
	./a.out

test_trmm:
	gcc trmm_tester.c out.c
	./a.out

time_trmm:
	gcc trmm_timer.c out.c
	./a.out

test_dgetrf:	
	cp out.c out_dgetrf.c
	echo "" > arrayAccess.h
	gcc dgetrf_tester.c
	./a.out

test_gemm:	
	gcc -fopenmp gemm_tester.c out.c -DMS=$(MS) -DNS=$(NS) -DKS=$(KS)
	./a.out

test_gemv:	
	gcc -fopenmp gemvT_tester.c out.c -DMS=$(MS) -DNS=$(NS) -DKS=$(KS)
	./a.out

test_ger:	
	gcc -fopenmp ger_tester.c out.c -DMS=$(MS) -DNS=$(NS) -DKS=$(KS)
	./a.out

tester:
	cd $(top_builddir)/test/testerGeneration; make tester_c input="$(top_builddir)/test/autoScripts/gemvT"; make tester_c input="$(top_builddir)/test/autoScripts/ger"; make tester_c input="$(top_builddir)/test/autoScripts/dgetrf"; make tester_c input="$(top_builddir)/test/autoScripts/gemm"

time_gemm:	
	gcc -fopenmp -O2 -DMS=$(MS) -DNS=$(NS) -DKS=$(KS) -DNREP=$(NREP) gemm2_timer.c out_dgemm_test.c
	./a.out

time_gemv:	
	gcc -O2 -DMS=$(MS) -DNS=$(NS) -DNREP=$(NREP) -fopenmp gemvT2_timer.c out_dgemvT.c
	./a.out

time_ger:	
	gcc -O2 -fopenmp -DMS=$(MS) -DNS=$(NS) -DNREP=$(NREP) ger2_timer.c out_dger.c
	./a.out

time_getrf:	
	echo "#define arr_ref(a,i,j) a[(i)*n+(j)]" > arrayAccess.h
	gcc -O2 -DNS=$(NS) -DMS=$(MS) -DNREP=$(NREP) dgetrf2_timer.c out_dgetrf.c
	./a.out

try_slice:
	echo "extern double& arr_ref( double* a, int a1, int a2);" > arrayAccess.h
	make slice input=dgetrf config1="-fs01 -bk2 $(bk) -cp 0" 
	make test_dgetrf
	make time_getrf
	make slice input=dgetrf config1="-fs01 -bk3 $(bk) -cp 0" 
	make test_dgetrf
	make time_getrf
	make slice input=dgemm config1="-fs01 -bk3 $(bk) -cp 0 -unroll $(ur2)" 
	make test_gemm
	make time_gemm
	make slice input=dger config1="-bk3 $(bk) -cp 0 -unroll $(ur2)" 
	make test_ger
	make time_ger
	make slice input=dgemvT config1="-bk3 $(bk) -cp 0 -unroll $(ur2)" 
	make test_gemv
	make time_gemv

try_ger:
	make single1 input=dger config1="-pbsize_nest1=\"$(bk) $(bk)\" -pcopy1_config_X=$(cp1) -pujsize_nest1=$(uj1) -pscalarRepl1_nest1_X=$(scalar1) -pscalarRepl2_nest1_Y=$(scalar2) -pusize_nest2=$(ur2)" 
	make test_ger
	make time_ger

try_gemv:
	make single1 input=dgemvT config1="-pbsize_nest1=\"$(bk) $(bk)\" -pcopy1_config_Y=$(cp1) -pcopy2_config_X=$(cp2) -pujsize_nest1=$(uj1) -pscalarRepl1_nest1_Y=$(scalar1) -pscalarRepl2_nest1_X=$(scalar2) -pusize_nest2=$(ur2)" 
	make test_gemv
	make time_gemv

try_getrf:
	make single1 input=dgetrf_bk_cp config1="-pbsize_nest1=\"$(bk) $(bk)\" -pujsize_nest1=$(uj1) -pscalarRepl1_body1_a=$(scalar1) -pscalarRepl2_body2_p=$(scalar2) -pscalarRepl3_nest4_a=$(scalar3)" 
	make test_dgetrf
	make time_getrf
	make single1 input=dgetrf_bk_cp config1="-pbsize_nest1=\"$(bk) 1\" -pujsize_nest1=$(uj1) -pscalarRepl1_body1_a=$(scalar1) -pscalarRepl2_body2_p=$(scalar2) -pscalarRepl3_nest4_a=$(scalar3)" 
	make test_dgetrf
	make time_getrf

try_gemm:
	make single1 input=dgemm_opt2_unroll config1="-pbsize_nest1=\"$(bk) $(bk) $(bk)\" -pcopy1_config_C=$(cp1) -pcopy2_config_A=$(cp2) -pcopy3_config_B=$(cp3) -pujsize_nest1=\"$(uj1) $(uj2)\" -pscalarRepl1_nest1_C=$(scalar1) -pscalarRepl2_nest1_A=$(scalar2) -pscalarRepl3_nest1_B=$(scalar3) -pusize_nest2=$(ur2)" 
	make test_gemm
	make time_gemm
tune_bk:
	for s in $(bk_sel); do if [[ $$s > $(ur2) ]]; then make try_$(input) bk=$$s; fi; done

tune_bk_slice:
	time make tune_bk input=slice

tune_bk_all:
	time make tune_bk input=getrf 
	time make tune_bk input=gemm
	time make tune_bk input=gemv
	time make tune_bk input=ger

tune_ur_gemm:
	time for ur_i in $(ur_sel); do make tune_bk input=gemm ur2=$${ur_i}; done

tune_ur_slice:
	time for ur_i in $(ur_sel); do make tune_bk_slice ur2=$${ur_i}; done

tune_ur:
	time make tune_bk input=getrf 
	make tune_ur_gemm
	time for ur_i in $(ur_sel); do make tune_bk input=ger ur2=$${ur_i}; done
	time for ur_i in $(ur_sel); do make tune_bk input=gemv ur2=$${ur_i}; done

tune_scalar1: 
	for s in $(scalar1_sel); do make tune_ur$(input) scalar1=$$s; done

tune_scalar2:
	for s in $(scalar2_sel); do make tune_scalar1 scalar2=$$s; done

tune_scalar3:
	for s in $(scalar3_sel); do make tune_scalar2 scalar3=$$s; done

tune_cp1:
	for s in $(cp1_sel); do make tune_scalar3 cp1=$$s; done

tune_cp2:
	for s in $(cp2_sel); do make tune_cp1 cp2=$$s; done

tune_cp3:
	for s in $(cp3_sel); do make tune_cp2 cp3=$$s; done

tune_uj1:
	for s in $(uj1_sel); do if [[  $$s<=12-$(uj2) ]]; then make tune_cp3 uj1=$$s; fi; done	

tune_uj2:
	for s in $(uj2_sel); do make tune_uj1 uj2=$$s; done	

tune:
	for s in 100 500 1000; do make tune_uj2 MS=$$s NS=$$s KS=$$s; done

timer:
	cd $(top_builddir)/test/timerGeneration; make timer_c input="$(top_builddir)/test/autoScripts/gemvT2"; make timer_c input="$(top_builddir)/test/autoScripts/ger2"; make timer_c input="$(top_builddir)/test/autoScripts/dgetrf2"; make timer_c input="$(top_builddir)/test/autoScripts/gemm2"

time:	
	$(ICC) $(ICCFLAGS) -I${top_srcdir}/include -o dgemm.o -c dgemm.c || exit
	cd ${atlas_obj}/bin;  make xdmmtst; ./xdmmtst -b 1 $(beta) -N $(min) $(max) $(incr) -A 2 n n > ./ex.out; ./xstattime -# 2 -fd ex.out > ./ex.csv
	cp $(atlas_obj)/bin/ex.csv $(srcdir)

copy: 
	for file in $(files); do cp $$file save/$$file; done;

repl1: 
	$(top_builddir)/src/pcg -L$(top_srcdir)/lib -pin=$(file) -pout=$(file) -pfrom=$(from) -pto="$(to)"  $(top_srcdir)/examples/StringTranslator.pt

repl: 
	for file in $(files); do $(top_builddir)/src/pcg -L$(top_srcdir)/lib -pin=$$file -pout=$$file -pfrom=$(from) -pto="$(to)"  $(top_srcdir)/examples/StringTranslator.pt;  done

trans:
	for file in $(files); do $(top_builddir)/src/pcg -L$(top_srcdir)/lib -pin=$$file -pout=$$file -pxformFile="$(top_srcdir)/examples/xform1.pt" $(top_srcdir)/examples/TranslatorDriver.pt; done

diffROSE:
	make local_diffROSE
	for d in $(SUBDIRS); do cd $$d; make diffROSE; cd ..; done

local_diffROSE:
	$(LOCAL_DIFFROSE)

toROSE:
	make diffROSE op=cp  dir="to"

local_toROSE:
	make local_diffROSE op=cp  dir="to"

fromROSE:
	make diffROSE op=cp dir=from

local_fromROSE:
	make local_diffROSE op=cp dir=from

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
