#define max(a,b) (((a) < (b))? (b) : (a))
#define min(a,b) (((a) < (b))? (a) : (b))
#include <omp.h>

void dgemm_test(const int M,const int N,const int K,const double alpha,const double* A,const int lda,const double* B,const int ldb,const double beta,double* C,const int ldc) {
   int i;
   int j;
   int l;
   int j_bk_1;
   int j_bk_2;
   int i_bk_3;
   int l_bk_4;
   double _A_cp_0_0;
   double _A_cp_0_1;
   double _A_cp_1_0;
   double _A_cp_1_1;
   omp_set_num_threads(2);
   #pragma omp  parallel  
    {
    #pragma omp  for private(j,i,l,j_bk_1,j_bk_2,i_bk_3,l_bk_4,_A_cp_0_0,_A_cp_0_1,_A_cp_1_0,_A_cp_1_1)
    for (j_bk_1=0; j_bk_1<N; j_bk_1+=256)
      {
         for (j_bk_2=0; j_bk_2<min(256,N-j_bk_1); j_bk_2+=16)
           {
              for (i_bk_3=0; i_bk_3<M; i_bk_3+=16)
                {
                   if ((l_bk_4=0)<K) 
                     {
                        for (j=0; j<-1+min(16,min(256-j_bk_2,-j_bk_2+(N-j_bk_1))); j+=2)
                          {
                             for (i=0; i<-1+min(16,M-i_bk_3); i+=2)
                               {
                                  if ((l=0)<-1+min(16,K)) 
                                    {
                                       _A_cp_0_0 = A[i+(i_bk_3+(l_bk_4*lda+l*lda))];
                                       _A_cp_0_1 = A[i+(i_bk_3+(l_bk_4*lda+(lda+l*lda)))];
                                       _A_cp_1_0 = A[1+(i+(i_bk_3+(l_bk_4*lda+l*lda)))];
                                       _A_cp_1_1 = A[1+(i+(i_bk_3+(l_bk_4*lda+(lda+l*lda))))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))] = beta*C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))]+alpha*_A_cp_0_0*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+j*ldb)))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))] = beta*C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))]+alpha*_A_cp_1_0*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+j*ldb)))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))] = beta*C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))]+alpha*_A_cp_0_0*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+(ldb+j*ldb))))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))] = beta*C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))]+alpha*_A_cp_1_0*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+(ldb+j*ldb))))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))]+alpha*_A_cp_0_1*B[j*ldb+(j_bk_2*ldb+(j_bk_1*ldb+(l_bk_4+(1+l))))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))]+alpha*_A_cp_1_1*B[j*ldb+(j_bk_2*ldb+(j_bk_1*ldb+(l_bk_4+(1+l))))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))]+alpha*_A_cp_0_1*B[j*ldb+(ldb+(j_bk_2*ldb+(j_bk_1*ldb+(l_bk_4+(1+l)))))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))]+alpha*_A_cp_1_1*B[j*ldb+(ldb+(j_bk_2*ldb+(j_bk_1*ldb+(l_bk_4+(1+l)))))];
                                    }
                                  for (l=2; l<-1+min(16,K); l+=2)
                                    {
                                       _A_cp_0_0 = A[i+(i_bk_3+(l_bk_4*lda+l*lda))];
                                       _A_cp_0_1 = A[i+(i_bk_3+(l_bk_4*lda+(lda+l*lda)))];
                                       _A_cp_1_0 = A[1+(i+(i_bk_3+(l_bk_4*lda+l*lda)))];
                                       _A_cp_1_1 = A[1+(i+(i_bk_3+(l_bk_4*lda+(lda+l*lda))))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))]+alpha*_A_cp_0_0*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+j*ldb)))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))]+alpha*_A_cp_1_0*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+j*ldb)))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))]+alpha*_A_cp_0_0*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+(ldb+j*ldb))))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))]+alpha*_A_cp_1_0*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+(ldb+j*ldb))))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))]+alpha*_A_cp_0_1*B[j*ldb+(j_bk_2*ldb+(j_bk_1*ldb+(l_bk_4+(1+l))))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))]+alpha*_A_cp_1_1*B[j*ldb+(j_bk_2*ldb+(j_bk_1*ldb+(l_bk_4+(1+l))))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))]+alpha*_A_cp_0_1*B[j*ldb+(ldb+(j_bk_2*ldb+(j_bk_1*ldb+(l_bk_4+(1+l)))))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))]+alpha*_A_cp_1_1*B[j*ldb+(ldb+(j_bk_2*ldb+(j_bk_1*ldb+(l_bk_4+(1+l)))))];
                                    }
                                  if ((l=l)<min(16,K)) 
                                    {
                                       /*SPLIT-START*/if (l==0) 
                                         {
                                            C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))] = beta*C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))];
                                         }
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))]+alpha*A[i+(i_bk_3+(l_bk_4*lda+l*lda))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+j*ldb)))];
                                       /*SPLIT-START*/if (l==0) 
                                         {
                                            C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))] = beta*C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))];
                                         }
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))]+alpha*A[i+(1+(i_bk_3+(l_bk_4*lda+l*lda)))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+j*ldb)))];
                                       /*SPLIT-START*/if (l==0) 
                                         {
                                            C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))] = beta*C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))];
                                         }
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))]+alpha*A[i+(i_bk_3+(l_bk_4*lda+l*lda))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+(ldb+j*ldb))))];
                                       /*SPLIT-START*/if (l==0) 
                                         {
                                            C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))] = beta*C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))];
                                         }
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))]+alpha*A[i+(1+(i_bk_3+(l_bk_4*lda+l*lda)))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+(ldb+j*ldb))))];
                                    }
                                  for (l=1+l; l<min(16,K); l+=1)
                                    {
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))]+alpha*A[i+(i_bk_3+(l_bk_4*lda+l*lda))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+j*ldb)))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))]+alpha*A[i+(1+(i_bk_3+(l_bk_4*lda+l*lda)))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+j*ldb)))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))]+alpha*A[i+(i_bk_3+(l_bk_4*lda+l*lda))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+(ldb+j*ldb))))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))]+alpha*A[i+(1+(i_bk_3+(l_bk_4*lda+l*lda)))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+(ldb+j*ldb))))];
                                    }
                               }
                             for (i=i; i<min(16,M-i_bk_3); i+=1)
                               {
                                  if ((l=0)<min(16,K)) 
                                    {
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))] = beta*C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))]+alpha*A[i+(i_bk_3+(l_bk_4*lda+l*lda))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+j*ldb)))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))] = beta*C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))]+alpha*A[i+(1+(i_bk_3+(l_bk_4*lda+l*lda)))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+j*ldb)))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))] = beta*C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))]+alpha*A[i+(i_bk_3+(l_bk_4*lda+l*lda))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+(ldb+j*ldb))))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))] = beta*C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))]+alpha*A[i+(1+(i_bk_3+(l_bk_4*lda+l*lda)))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+(ldb+j*ldb))))];
                                    }
                                  for (l=1; l<min(16,K); l+=1)
                                    {
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))]+alpha*A[i+(i_bk_3+(l_bk_4*lda+l*lda))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+j*ldb)))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))]+alpha*A[i+(1+(i_bk_3+(l_bk_4*lda+l*lda)))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+j*ldb)))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))]+alpha*A[i+(i_bk_3+(l_bk_4*lda+l*lda))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+(ldb+j*ldb))))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))]+alpha*A[i+(1+(i_bk_3+(l_bk_4*lda+l*lda)))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+(ldb+j*ldb))))];
                                    }
                               }
                          }
                        for (j=j; j<min(16,min(256-j_bk_2,-j_bk_2+(N-j_bk_1))); j+=1)
                          {
                             for (i=0; i<min(16,M-i_bk_3); i+=1)
                               {
                                  if ((l=0)<min(16,K)) 
                                    {
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))] = beta*C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))]+alpha*A[i+(i_bk_3+(l_bk_4*lda+l*lda))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+j*ldb)))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))] = beta*C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))]+alpha*A[i+(1+(i_bk_3+(l_bk_4*lda+l*lda)))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+j*ldb)))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))] = beta*C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))]+alpha*A[i+(i_bk_3+(l_bk_4*lda+l*lda))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+(ldb+j*ldb))))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))] = beta*C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))]+alpha*A[i+(1+(i_bk_3+(l_bk_4*lda+l*lda)))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+(ldb+j*ldb))))];
                                    }
                                  for (l=1; l<min(16,K); l+=1)
                                    {
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))]+alpha*A[i+(i_bk_3+(l_bk_4*lda+l*lda))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+j*ldb)))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))]+alpha*A[i+(1+(i_bk_3+(l_bk_4*lda+l*lda)))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+j*ldb)))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))]+alpha*A[i+(i_bk_3+(l_bk_4*lda+l*lda))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+(ldb+j*ldb))))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))]+alpha*A[i+(1+(i_bk_3+(l_bk_4*lda+l*lda)))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+(ldb+j*ldb))))];
                                    }
                               }
                          }
                     }
                   for (l_bk_4=16; l_bk_4<K; l_bk_4+=16)
                     {
                        for (j=0; j<-1+min(16,min(256-j_bk_2,-j_bk_2+(N-j_bk_1))); j+=2)
                          {
                             for (i=0; i<-1+min(16,M-i_bk_3); i+=2)
                               {
                                  for (l=0; l<-1+min(16,K-l_bk_4); l+=2)
                                    {
                                       _A_cp_0_0 = A[i+(i_bk_3+(l_bk_4*lda+l*lda))];
                                       _A_cp_0_1 = A[i+(i_bk_3+(l_bk_4*lda+(lda+l*lda)))];
                                       _A_cp_1_0 = A[1+(i+(i_bk_3+(l_bk_4*lda+l*lda)))];
                                       _A_cp_1_1 = A[1+(i+(i_bk_3+(l_bk_4*lda+(lda+l*lda))))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))]+alpha*_A_cp_0_0*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+j*ldb)))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))]+alpha*_A_cp_1_0*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+j*ldb)))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))]+alpha*_A_cp_0_0*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+(ldb+j*ldb))))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))]+alpha*_A_cp_1_0*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+(ldb+j*ldb))))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))]+alpha*_A_cp_0_1*B[j*ldb+(j_bk_2*ldb+(j_bk_1*ldb+(l_bk_4+(1+l))))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))]+alpha*_A_cp_1_1*B[j*ldb+(j_bk_2*ldb+(j_bk_1*ldb+(l_bk_4+(1+l))))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))]+alpha*_A_cp_0_1*B[j*ldb+(ldb+(j_bk_2*ldb+(j_bk_1*ldb+(l_bk_4+(1+l)))))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))]+alpha*_A_cp_1_1*B[j*ldb+(ldb+(j_bk_2*ldb+(j_bk_1*ldb+(l_bk_4+(1+l)))))];
                                    }
                                  for (l=l; l<min(16,K-l_bk_4); l+=1)
                                    {
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))]+alpha*A[i+(i_bk_3+(l_bk_4*lda+l*lda))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+j*ldb)))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))]+alpha*A[i+(1+(i_bk_3+(l_bk_4*lda+l*lda)))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+j*ldb)))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))]+alpha*A[i+(i_bk_3+(l_bk_4*lda+l*lda))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+(ldb+j*ldb))))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))]+alpha*A[i+(1+(i_bk_3+(l_bk_4*lda+l*lda)))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+(ldb+j*ldb))))];
                                    }
                               }
                             for (i=i; i<min(16,M-i_bk_3); i+=1)
                               {
                                  for (l=0; l<min(16,K-l_bk_4); l+=1)
                                    {
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))]+alpha*A[i+(i_bk_3+(l_bk_4*lda+l*lda))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+j*ldb)))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))]+alpha*A[i+(1+(i_bk_3+(l_bk_4*lda+l*lda)))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+j*ldb)))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))]+alpha*A[i+(i_bk_3+(l_bk_4*lda+l*lda))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+(ldb+j*ldb))))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))]+alpha*A[i+(1+(i_bk_3+(l_bk_4*lda+l*lda)))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+(ldb+j*ldb))))];
                                    }
                               }
                          }
                        for (j=j; j<min(16,min(256-j_bk_2,-j_bk_2+(N-j_bk_1))); j+=1)
                          {
                             for (i=0; i<min(16,M-i_bk_3); i+=1)
                               {
                                  for (l=0; l<min(16,K-l_bk_4); l+=1)
                                    {
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc)))]+alpha*A[i+(i_bk_3+(l_bk_4*lda+l*lda))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+j*ldb)))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+j*ldc))))]+alpha*A[i+(1+(i_bk_3+(l_bk_4*lda+l*lda)))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+j*ldb)))];
                                       C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))] = C[i+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc))))]+alpha*A[i+(i_bk_3+(l_bk_4*lda+l*lda))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+(ldb+j*ldb))))];
                                       C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))] = C[i+(1+(i_bk_3+(j_bk_1*ldc+(j_bk_2*ldc+(ldc+j*ldc)))))]+alpha*A[i+(1+(i_bk_3+(l_bk_4*lda+l*lda)))]*B[l+(l_bk_4+(j_bk_1*ldb+(j_bk_2*ldb+(ldb+j*ldb))))];
                                    }
                               }
                          }
                     }
                }
           }
      }
    }
   
}
