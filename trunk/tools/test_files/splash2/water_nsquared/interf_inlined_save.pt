include opt.pi

<parameter inputFile message="input file name"/>
<parameter outputFile  message="output file name"/>

<trace inputCode />
<trace Nest2,Nest3,Nest4,Nest5,Nest6,Nest7,Nest11,Nest12,Nest13 />
<trace Stmt1,Stmt2,Stmt3,Stmt4,Stmt5,Stmt6,Stmt7,Stmt8,Stmt9,Stmt10,Stmt11,Stmt12,Stmt13,Stmt14,Stmt15,Stmt16,Stmt17,Stmt18,Stmt19,Stmt20,Stmt21,Stmt22,Stmt23 />

<input from=inputFile syntax="Cfront.code" to=inputCode />

<trace Nest3_group1 = (Nest3) />
<trace Nest2_group1 = (Nest2) />
<trace Nest13_FuseLoops_index_start_th23 = () />
<trace Nest3_ScalarRepl_aref_th22 = (CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ObjAccess#(CODE.ArrayAccess#("VAR","comp"),"F"),"DISP"),"XDIR"),0)) />
<trace Nest3_ScalarRepl_aref_th21 = (CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ObjAccess#(CODE.ArrayAccess#("VAR","comp"),"F"),"DISP"),"XDIR"),1)) />
<trace Nest3_ScalarRepl_aref_th20 = (CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ObjAccess#(CODE.ArrayAccess#("VAR","comp"),"F"),"DISP"),"XDIR"),2)) />
<trace Nest3_ScalarRepl_aref_th19 = (CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ObjAccess#(CODE.ArrayAccess#("VAR","comp"),"F"),"DISP"),"YDIR"),0)) />
<trace Nest3_ScalarRepl_aref_th18 = (CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ObjAccess#(CODE.ArrayAccess#("VAR","comp"),"F"),"DISP"),"YDIR"),1)) />
<trace Nest3_ScalarRepl_aref_th17 = (CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ObjAccess#(CODE.ArrayAccess#("VAR","comp"),"F"),"DISP"),"YDIR"),2)) />
<trace Nest3_ScalarRepl_aref_th16 = (CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ObjAccess#(CODE.ArrayAccess#("VAR","comp"),"F"),"DISP"),"ZDIR"),0)) />
<trace Nest3_ScalarRepl_aref_th15 = (CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ObjAccess#(CODE.ArrayAccess#("VAR","comp"),"F"),"DISP"),"ZDIR"),1)) />
<trace Nest3_ScalarRepl_aref_th14 = (CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ObjAccess#(CODE.ArrayAccess#("VAR","comp"),"F"),"DISP"),"ZDIR"),2)) />
<trace Nest2_ScalarRepl_aref_th13 = (CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ObjAccess#(CODE.ArrayAccess#("VAR","mol"),"F"),"DISP"),"XDIR"),0)) />
<trace Nest2_ScalarRepl_aref_th12 = (CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ObjAccess#(CODE.ArrayAccess#("VAR","mol"),"F"),"DISP"),"XDIR"),1)) />
<trace Nest2_ScalarRepl_aref_th11 = (CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ObjAccess#(CODE.ArrayAccess#("VAR","mol"),"F"),"DISP"),"XDIR"),2)) />
<trace Nest2_ScalarRepl_aref_th10 = (CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ObjAccess#(CODE.ArrayAccess#("VAR","mol"),"F"),"DISP"),"YDIR"),0)) />
<trace Nest2_ScalarRepl_aref_th9 = (CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ObjAccess#(CODE.ArrayAccess#("VAR","mol"),"F"),"DISP"),"YDIR"),1)) />
<trace Nest2_ScalarRepl_aref_th8 = (CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ObjAccess#(CODE.ArrayAccess#("VAR","mol"),"F"),"DISP"),"YDIR"),2)) />
<trace Nest2_ScalarRepl_aref_th7 = (CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ObjAccess#(CODE.ArrayAccess#("VAR","mol"),"F"),"DISP"),"ZDIR"),0)) />
<trace Nest2_ScalarRepl_aref_th6 = (CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ObjAccess#(CODE.ArrayAccess#("VAR","mol"),"F"),"DISP"),"ZDIR"),1)) />
<trace Nest2_ScalarRepl_aref_th5 = (CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ArrayAccess#(CODE.ObjAccess#(CODE.ArrayAccess#("VAR","mol"),"F"),"DISP"),"ZDIR"),2)) />
<trace Nest2_ScalarRepl_aref_th4 = (CODE.ArrayAccess#(CODE.ObjAccess#(CODE.ArrayAccess#("VAR","mol"),"VM"),"XDIR")) />
<trace Nest2_ScalarRepl_aref_th3 = (CODE.ArrayAccess#(CODE.ObjAccess#(CODE.ArrayAccess#("VAR","mol"),"VM"),"YDIR")) />
<trace Nest2_ScalarRepl_aref_th2 = (CODE.ArrayAccess#(CODE.ObjAccess#(CODE.ArrayAccess#("VAR","mol"),"VM"),"ZDIR")) />
<trace Stmt23_StrengthReduction_subexpression_th1 = () />

<trace _decl1="" />
<eval Nest2_decl=Nest2;
      if (Nest2 : CODE.FunctionDecl) 
          Nest2_decl=Nest2[FunctionDecl.body][StmtBlock.stmts];
      else Nest2_decl = Nest2;
      EraseTraceHandle[repl=(_decl1 Nest2_decl)](Nest2_decl, inputCode); />
<define TRACE_DECL _decl1 />
<define TRACE_INCL inputCode/>
<define TRACE_TARGET inputCode />

<define TRACE_EXP (Nest13_FuseLoops_index_start_th23 Nest3_ScalarRepl_aref_th22 Nest3_ScalarRepl_aref_th21 Nest3_ScalarRepl_aref_th20 Nest3_ScalarRepl_aref_th19 Nest3_ScalarRepl_aref_th18 Nest3_ScalarRepl_aref_th17 Nest3_ScalarRepl_aref_th16 Nest3_ScalarRepl_aref_th15 Nest3_ScalarRepl_aref_th14 Nest2_ScalarRepl_aref_th13 Nest2_ScalarRepl_aref_th12 Nest2_ScalarRepl_aref_th11 Nest2_ScalarRepl_aref_th10 Nest2_ScalarRepl_aref_th9 Nest2_ScalarRepl_aref_th8 Nest2_ScalarRepl_aref_th7 Nest2_ScalarRepl_aref_th6 Nest2_ScalarRepl_aref_th5 Nest2_ScalarRepl_aref_th4 Nest2_ScalarRepl_aref_th3 Nest2_ScalarRepl_aref_th2 Stmt23_StrengthReduction_subexpression_th1) />

<eval EraseTraceHandle[repl=Nest3_group1](Nest3,inputCode);
	EraseTraceHandle[repl=Nest2_group1](Nest2,inputCode);
	RedundancyElimination[used_place=("")](4,Stmt2);
	RedundancyElimination[used_place=(Stmt22)](4,Stmt3);
	RedundancyElimination[used_place=(Stmt22)](4,Stmt4);
	RedundancyElimination[used_place=(Stmt22)](4,Stmt5);
	RedundancyElimination[used_place=(Stmt22)](4,Stmt6);
	RedundancyElimination[used_place=(Stmt22)](4,Stmt7);
	RedundancyElimination[used_place=("")](4,Stmt9);
	RedundancyElimination[used_place=(Stmt22)](4,Stmt10);
	RedundancyElimination[used_place=(Stmt22)](4,Stmt11);
	RedundancyElimination[used_place=(Stmt22)](4,Stmt12);
	RedundancyElimination[used_place=(Stmt22)](4,Stmt13);
	RedundancyElimination[used_place=(Stmt22)](4,Stmt14);
	RedundancyElimination[used_place=(Stmt22);erase_flag=(0)](4,Stmt16);
	RedundancyElimination[used_place=(Stmt22)](4,Stmt17);
	RedundancyElimination[used_place=(Stmt22)](4,Stmt18);
	RedundancyElimination[used_place=(Stmt22)](4,Stmt19);
	RedundancyElimination[used_place=(Stmt22)](4,Stmt20);
	RedundancyElimination[used_place=(Stmt22)](4,Stmt21);
	FuseLoops[reserve_target=1]((Nest11 Nest12),Nest13);
	RedundancyElimination[used_place=(Stmt22);index_start=9](4,Nest13);
	ScalarRepl[data_type="double";init=1;save=0;scalar_num=1;init_loc=(Stmt1)](Nest3_ScalarRepl_aref_th22,(Nest3_group1),Nest3_group1[Nest.body]);
	ScalarRepl[data_type="double";init=1;save=0;scalar_num=1;init_loc=(Stmt22)](Nest3_ScalarRepl_aref_th21,(Nest3_group1),Nest3_group1[Nest.body]);
	ScalarRepl[data_type="double";init=1;save=0;scalar_num=1;init_loc=(Stmt1)](Nest3_ScalarRepl_aref_th20,(Nest3_group1),Nest3_group1[Nest.body]);
	ScalarRepl[data_type="double";init=1;save=0;scalar_num=1;init_loc=(Stmt8)](Nest3_ScalarRepl_aref_th19,(Nest3_group1),Nest3_group1[Nest.body]);
	ScalarRepl[data_type="double";init=1;save=0;scalar_num=1;init_loc=(Stmt22)](Nest3_ScalarRepl_aref_th18,(Nest3_group1),Nest3_group1[Nest.body]);
	ScalarRepl[data_type="double";init=1;save=0;scalar_num=1;init_loc=(Stmt8)](Nest3_ScalarRepl_aref_th17,(Nest3_group1),Nest3_group1[Nest.body]);
	ScalarRepl[data_type="double";init=1;save=0;scalar_num=1;init_loc=(Stmt15)](Nest3_ScalarRepl_aref_th16,(Nest3_group1),Nest3_group1[Nest.body]);
	ScalarRepl[data_type="double";init=1;save=0;scalar_num=1;init_loc=(Stmt22)](Nest3_ScalarRepl_aref_th15,(Nest3_group1),Nest3_group1[Nest.body]);
	ScalarRepl[data_type="double";init=1;save=0;scalar_num=1;init_loc=(Stmt15)](Nest3_ScalarRepl_aref_th14,(Nest3_group1),Nest3_group1[Nest.body]);
	ScalarRepl[data_type="double";init=1;save=0;scalar_num=1;init_loc=(Nest3)](Nest2_ScalarRepl_aref_th13,(Nest2_group1),Nest2_group1[Nest.body]);
	ScalarRepl[data_type="double";init=1;save=0;scalar_num=1;init_loc=(Nest3)](Nest2_ScalarRepl_aref_th12,(Nest2_group1),Nest2_group1[Nest.body]);
	ScalarRepl[data_type="double";init=1;save=0;scalar_num=1;init_loc=(Nest3)](Nest2_ScalarRepl_aref_th11,(Nest2_group1),Nest2_group1[Nest.body]);
	ScalarRepl[data_type="double";init=1;save=0;scalar_num=1;init_loc=(Nest3)](Nest2_ScalarRepl_aref_th10,(Nest2_group1),Nest2_group1[Nest.body]);
	ScalarRepl[data_type="double";init=1;save=0;scalar_num=1;init_loc=(Nest3)](Nest2_ScalarRepl_aref_th9,(Nest2_group1),Nest2_group1[Nest.body]);
	ScalarRepl[data_type="double";init=1;save=0;scalar_num=1;init_loc=(Nest3)](Nest2_ScalarRepl_aref_th8,(Nest2_group1),Nest2_group1[Nest.body]);
	ScalarRepl[data_type="double";init=1;save=0;scalar_num=1;init_loc=(Nest3)](Nest2_ScalarRepl_aref_th7,(Nest2_group1),Nest2_group1[Nest.body]);
	ScalarRepl[data_type="double";init=1;save=0;scalar_num=1;init_loc=(Nest3)](Nest2_ScalarRepl_aref_th6,(Nest2_group1),Nest2_group1[Nest.body]);
	ScalarRepl[data_type="double";init=1;save=0;scalar_num=1;init_loc=(Nest3)](Nest2_ScalarRepl_aref_th5,(Nest2_group1),Nest2_group1[Nest.body]);
	ScalarRepl[data_type="double";init=1;save=0;scalar_num=1;init_loc=(Nest3)](Nest2_ScalarRepl_aref_th4,(Nest2_group1),Nest2_group1[Nest.body]);
	ScalarRepl[data_type="double";init=1;save=0;scalar_num=1;init_loc=(Nest3)](Nest2_ScalarRepl_aref_th3,(Nest2_group1),Nest2_group1[Nest.body]);
	ScalarRepl[data_type="double";init=1;save=0;scalar_num=1;init_loc=(Nest3)](Nest2_ScalarRepl_aref_th2,(Nest2_group1),Nest2_group1[Nest.body]);
	RedundancyElimination[expression=CODE.Bop#("==", CODE.Bop#("%", "NMOL", 2), 0);data_type="int"](6,Nest2);
	StrengthReduction[minus_result="NMOL1"](2,Stmt23); />

<output to=outputFile syntax="Cfront.code" from=inputCode /> 